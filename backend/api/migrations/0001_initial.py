# Generated by Django 5.2.6 on 2025-09-29 13:14

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nom du médicament')),
                ('medicine_id', models.CharField(max_length=50, unique=True, verbose_name='ID médicament')),
                ('stock_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantité en stock')),
                ('min_stock_alert', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Seuil d'alerte stock")),
                ('composition', models.TextField(verbose_name='Composition')),
                ('manufacturer', models.CharField(max_length=255, verbose_name='Fabricant/Commerçant')),
                ('consumption_type', models.CharField(choices=[('oral', 'Oral'), ('injection', 'Injection'), ('topique', 'Topique'), ('inhalation', 'Inhalation')], max_length=20, verbose_name='Type de consommation')),
                ('expiration_date', models.DateField(verbose_name="Date d'expiration")),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('dosage_info', models.TextField(blank=True, verbose_name='Dosage et posologie')),
                ('active_ingredients', models.TextField(blank=True, verbose_name='Ingrédients actifs')),
                ('side_effects', models.TextField(blank=True, verbose_name='Effets secondaires')),
                ('pharmaceutical_form', models.CharField(choices=[('comprime', 'Comprimé'), ('gelule', 'Gélule'), ('sirop', 'Sirop'), ('creme', 'Crème'), ('pommade', 'Pommade'), ('injection', 'Injection'), ('gouttes', 'Gouttes'), ('suppositoire', 'Suppositoire'), ('autre', 'Autre')], max_length=20, verbose_name='Forme pharmaceutique')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name="Prix d'achat (FCFA)")),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Prix de vente (FCFA)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='medicines/', verbose_name='Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
            ],
            options={
                'verbose_name': 'Médicament',
                'verbose_name_plural': 'Médicaments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MedicineGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom du groupe')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
            ],
            options={
                'verbose_name': 'Groupe de médicaments',
                'verbose_name_plural': 'Groupes de médicaments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_number', models.CharField(max_length=50, unique=True, verbose_name='Numéro de vente')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Montant total (FCFA)')),
                ('payment_method', models.CharField(choices=[('cash', 'Espèces'), ('card', 'Carte bancaire'), ('mobile', 'Mobile money'), ('check', 'Chèque')], max_length=20, verbose_name='Méthode de paiement')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de vente')),
            ],
            options={
                'verbose_name': 'Vente',
                'verbose_name_plural': 'Ventes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantité')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Prix unitaire (FCFA)')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Prix total (FCFA)')),
            ],
            options={
                'verbose_name': 'Ligne de vente',
                'verbose_name_plural': 'Lignes de vente',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nom du fournisseur')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('address', models.TextField(verbose_name='Adresse')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
            ],
            options={
                'verbose_name': 'Fournisseur',
                'verbose_name_plural': 'Fournisseurs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('gender', models.CharField(choices=[('M', 'Homme'), ('F', 'Femme')], max_length=1, verbose_name='Genre')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('address', models.TextField(blank=True, verbose_name='Adresse')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['last_name', 'first_name'],
                'indexes': [models.Index(fields=['phone'], name='api_client_phone_dfeac6_idx'), models.Index(fields=['email'], name='api_client_email_14fe36_idx')],
            },
        ),
    ]
